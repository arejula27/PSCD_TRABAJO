CLIENTE:
--------

inicializarsistema{
	leerParametrosEntrada(f.txt);
	crearPoblacion(datos);
}


thread estadistico,GAcontrol;
channel of (pob,int)[3];
-----------------------------


thread estadistico:

	esperarFusion;
	elMejor(poblacion);
	distanciaMedia(poblacion);
	tiempoEjecucion(poblacion);





thread GAcontrol:

	esperarEstadistico;	
	declarar subPob1,subPob2,subPob3;
	dividirPoblacon(poblacionIni,subPob1,subPob2,subPob3);
	ops[3]={"aparear","mutar","seleccionar"};

	for(int i=0;i<3;i++){
		channel[0] <= (subPob1,ops[i]);
		channel[1] <= (subPob2,ops[i]);
		channel[2] <= (subPob3,ops[i]);

		channel[0] => (subPob1);
		channel[1] => (subPob2);
		channel[2] => (subPob3);
	
	}

	fusionarPoblaciones(poblacionsubPob1,subPob2,subPob3);

	
SERVIDOR:
---------
channel[id] => (subPob,op);
switch op:
	case "aparear":
		for (int i = 0;i < subPob.N/2; i++){
			tread[i] = (&aparear, args)
		}
	case "mutar":
		for (int i = 0;i < subPob.N; i++){
			tread[i] = (&aparear, args)
	case "seleccionar":
		seleccionar();
		
		











NODO DE COMPUTO

	MONITOR POBLACION ACTUAL:
		-crearPoblacion(datos); //menos el primer componente los demas aleatorios
		-evaluarPoblacion(poblacion); //rellena el campo fitness de los viajeros
		-leerParametrosEntrada(fichero.txt); //los datos de entrada se almacenan en el monitor
		-dividirPoblacion(poblacion,subPob1,subPob2,subPob3); //divide la poblacion en 3 subpoblaciones
		-fusionarPoblaciones(poblacion,subPob1,subPob2,subPob3); //fusiona las subpoblaciones en poblacion
		-esperarEstadistico; //espera a que el proceso Estadistico haya terminado de estudiar la poblacion actual para cambiarla de nuevo

	MONITOR MONITORIZACION:
		-esperarFusion; //espera a que el GA control haya fusionado la poblacion (condicion de inicio)
		-elMejor(poblacion); //devuelve el individuo con mejor recorrido
		-distanciaMedia(poblacion); 
		-tiempoEjecucion(poblacion); // devuelve el tiempo que le cuesta recorrer a toda la poblacion

	PROCESO GA_CONTROL




	
